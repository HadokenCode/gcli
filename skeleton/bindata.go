// Code generated by go-bindata.
// sources:
// resource/tmpl/command/codegangsta_cli/command/command.go.tmpl
// resource/tmpl/command/codegangsta_cli/command/command_test.go.tmpl
// resource/tmpl/command/codegangsta_cli/commands.go.tmpl
// resource/tmpl/command/codegangsta_cli/main.go.tmpl
// resource/tmpl/command/codegangsta_cli/version.go.tmpl
// resource/tmpl/command/go_cmd/command.go.tmpl
// resource/tmpl/command/go_cmd/command_test.go.tmpl
// resource/tmpl/command/go_cmd/main.go.tmpl
// resource/tmpl/command/mitchellh_cli/cli.go.tmpl
// resource/tmpl/command/mitchellh_cli/command/command.go.tmpl
// resource/tmpl/command/mitchellh_cli/command/command_test.go.tmpl
// resource/tmpl/command/mitchellh_cli/command/meta.go.tmpl
// resource/tmpl/command/mitchellh_cli/commands.go.tmpl
// resource/tmpl/command/mitchellh_cli/main.go.tmpl
// resource/tmpl/command/mitchellh_cli/version.go.tmpl
// resource/tmpl/common/CHANGELOG.md.tmpl
// resource/tmpl/common/README.md.tmpl
// resource/tmpl/flag/flag/cli.go.tmpl
// resource/tmpl/flag/flag/cli_test.go.tmpl
// resource/tmpl/flag/flag/main.go.tmpl
// resource/tmpl/flag/flag/version.go.tmpl
// DO NOT EDIT!

package skeleton

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"strings"
	"os"
	"time"
	"io/ioutil"
	"path"
	"path/filepath"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name string
	size int64
	mode os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _resourceTmplCommandCodegangsta_cliCommandCommandGoTmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x14\xcc\x31\x0e\xc2\x30\x0c\x46\xe1\x19\x9f\xe2\x57\x27\x60\x68\x0e\xd1\x9d\x95\xd9\x38\x26\x8d\x68\x92\x2a\x38\x12\x28\xca\xdd\x29\xeb\xd3\xd3\xb7\xb3\xbc\x38\x28\xa4\xa4\xc4\xd9\x13\xc5\xb4\x97\x6a\x98\x42\xb4\xb5\x3d\xe6\xa3\x3b\x29\x5e\x03\xe7\xf0\x36\x76\xb2\xc5\x89\xe8\xd9\xb2\x60\x49\xbe\x77\x58\xb4\x4d\x31\xdf\x38\x29\xc6\x38\x0b\xae\xc7\x32\x2f\x25\x9b\x7e\xec\x82\x4e\x27\xe7\x70\xaf\xd1\x14\xdf\xd2\x2a\xfe\x18\x56\xad\x4a\x83\x7e\x01\x00\x00\xff\xff\x77\x72\xce\x18\x7d\x00\x00\x00")

func resourceTmplCommandCodegangsta_cliCommandCommandGoTmplBytes() ([]byte, error) {
	return bindataRead(
		_resourceTmplCommandCodegangsta_cliCommandCommandGoTmpl,
		"resource/tmpl/command/codegangsta_cli/command/command.go.tmpl",
	)
}

func resourceTmplCommandCodegangsta_cliCommandCommandGoTmpl() (*asset, error) {
	bytes, err := resourceTmplCommandCodegangsta_cliCommandCommandGoTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "resource/tmpl/command/codegangsta_cli/command/command.go.tmpl", size: 125, mode: os.FileMode(420), modTime: time.Unix(1434251196, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _resourceTmplCommandCodegangsta_cliCommandCommand_testGoTmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x2c\xcc\x31\x0e\xc2\x30\x10\x44\xd1\x9a\x3d\xc5\x28\x15\x50\x24\x87\xa0\xa7\x8a\x44\x6d\xd9\x43\xb0\x60\xed\x68\xd9\x14\xc8\xf2\xdd\x49\x91\xf2\x4b\x5f\x6f\x0d\xf1\x1d\x16\x22\x56\xd5\x50\x92\x48\xd6\xb5\x9a\x63\x70\x7e\x3d\x97\x65\x10\x79\x6e\x25\x62\xde\xf3\xa6\xa9\x35\x78\xf6\x0f\x31\xde\x83\x12\xbd\x9f\x1d\xd7\x63\x1d\xe7\x0b\x9a\x9c\xa6\x09\x0f\xcb\x4e\xfc\xea\x66\xbb\x9b\x88\x17\x8d\xd2\xe5\x1f\x00\x00\xff\xff\xad\xae\xb4\xd8\x6c\x00\x00\x00")

func resourceTmplCommandCodegangsta_cliCommandCommand_testGoTmplBytes() ([]byte, error) {
	return bindataRead(
		_resourceTmplCommandCodegangsta_cliCommandCommand_testGoTmpl,
		"resource/tmpl/command/codegangsta_cli/command/command_test.go.tmpl",
	)
}

func resourceTmplCommandCodegangsta_cliCommandCommand_testGoTmpl() (*asset, error) {
	bytes, err := resourceTmplCommandCodegangsta_cliCommandCommand_testGoTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "resource/tmpl/command/codegangsta_cli/command/command_test.go.tmpl", size: 108, mode: os.FileMode(420), modTime: time.Unix(1434251196, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _resourceTmplCommandCodegangsta_cliCommandsGoTmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x5c\x51\xcb\x6a\xeb\x30\x10\x5d\x5b\x5f\x31\x08\x42\xec\x4b\xa2\xc0\x5d\x06\xba\x08\xa1\xe9\x2e\x5d\x84\xae\x4a\x17\x8a\xac\x38\xa2\xd6\x03\x69\xd2\xa6\x18\xff\x7b\xc7\x89\xed\xba\x15\x18\x69\xe6\x1c\xce\x03\x07\xa9\xde\x65\xa5\xc1\x4a\xe3\x18\x33\x36\xf8\x88\x90\xb3\x8c\x9f\x2c\x72\xba\x7c\xe2\x8c\xae\xca\xe0\xf9\x72\x14\xca\xdb\x95\xf2\xa5\xae\xa4\xab\x12\xca\x95\xaa\x0d\xff\x8d\x36\x0d\x88\xe7\x4f\xa7\x23\xb4\xed\x6d\xd8\x4b\xab\xbb\x37\x81\x56\xba\x92\xb3\x82\xb1\x0f\x19\xe1\xa9\xf6\x47\x59\xef\x6a\x59\x25\x78\x80\xd7\x37\x92\x12\xdd\xd4\xb4\x77\x7c\x7b\xe7\xff\x80\xfd\xa2\x61\x40\x87\x94\x23\x65\xd0\x20\x46\x5e\xdb\xb2\xac\x61\x59\xd6\x19\xae\xa1\x3f\x7c\x12\x81\x2f\x08\x7d\x49\xd4\x76\x3d\x45\x0f\x5f\xce\x87\x64\xd2\xc0\xd8\x28\x34\xde\xf5\x94\x3e\xb5\xd8\xda\x92\xb8\x68\xb0\xd6\xa3\x5e\x47\xbe\xe5\x1f\xe4\xa6\x25\x08\xa4\xaf\x8f\xaa\x5d\xd9\xc5\xa3\x66\xa7\x8b\x53\x43\xb5\xbd\xc7\x9d\xbf\xb8\x32\x57\xf0\xef\x5e\xd0\xa1\xbe\xe2\x62\x30\x85\x84\xd1\xb8\xaa\x00\x6a\x45\x7f\x43\xec\x02\x8d\x78\xca\x7d\x12\x07\x2c\x75\x8c\x0b\xe0\x33\x32\x9f\xcf\xd2\x1c\x28\xbf\xf3\x08\x12\x66\x69\x0c\x0d\x07\xad\x3b\x14\x96\xcb\xb3\xae\xc3\x5c\x70\xd2\x16\x9b\x10\x6e\x0d\x46\x9f\x3f\xcb\xf1\x5d\xb0\x8c\xac\x1e\xaf\x06\xf3\xff\x05\x85\xff\x0e\x00\x00\xff\xff\xd5\x6d\xdd\xd9\x2b\x02\x00\x00")

func resourceTmplCommandCodegangsta_cliCommandsGoTmplBytes() ([]byte, error) {
	return bindataRead(
		_resourceTmplCommandCodegangsta_cliCommandsGoTmpl,
		"resource/tmpl/command/codegangsta_cli/commands.go.tmpl",
	)
}

func resourceTmplCommandCodegangsta_cliCommandsGoTmpl() (*asset, error) {
	bytes, err := resourceTmplCommandCodegangsta_cliCommandsGoTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "resource/tmpl/command/codegangsta_cli/commands.go.tmpl", size: 555, mode: os.FileMode(420), modTime: time.Unix(1434251196, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _resourceTmplCommandCodegangsta_cliMainGoTmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x54\x8e\x3f\x6f\xf4\x20\x0c\x87\xe7\x97\x4f\x61\x31\x25\x0b\xb7\xbf\xd2\x0d\x51\xdb\xeb\x96\x4a\x95\xda\xdd\x47\x28\x87\x0a\x18\xf1\x47\x37\x44\xf9\xee\x85\x90\x53\xd5\xc9\xf6\xf3\xfc\x6c\x08\x28\xbf\x51\x2b\x70\x68\x3c\x63\xc6\x05\x8a\x19\x06\xf6\x8f\x53\xe2\xac\x16\x6d\xf2\xad\x5c\x85\x24\x77\x92\xb4\x28\x8d\x5e\xa7\x8c\x27\x69\x0d\x67\x23\x63\x5f\xc5\xcb\x7d\x77\x18\x61\xad\x79\x0c\x01\xfe\x9f\xa1\x6a\x31\xab\xfb\x14\xc2\x30\xee\x50\xcc\xe8\x14\x9c\xa1\x95\x0e\x3e\x55\x4c\x86\x7c\x65\x47\xd7\xf1\x54\xf2\x8d\x62\xa5\x7c\x5d\x41\xbc\xdd\xbd\x8a\xb0\x6d\xbc\xcb\x97\xfa\x92\x6d\xee\x98\x3f\x52\xfb\xfa\x91\x7d\x56\x49\x46\x13\x72\x3b\xda\x36\x7a\xe4\x62\x51\xa7\x1a\x79\xb5\x74\x45\xbb\x4f\x5d\x3c\x91\x73\xe8\x97\xe6\x1e\xed\x1f\x31\x53\xbe\x50\xf1\xcb\xaf\x7f\x90\xe3\xf2\x7b\xf1\x03\x25\x31\x45\x9d\x46\xb6\xb1\x9f\x00\x00\x00\xff\xff\x49\x9c\x05\x2f\x49\x01\x00\x00")

func resourceTmplCommandCodegangsta_cliMainGoTmplBytes() ([]byte, error) {
	return bindataRead(
		_resourceTmplCommandCodegangsta_cliMainGoTmpl,
		"resource/tmpl/command/codegangsta_cli/main.go.tmpl",
	)
}

func resourceTmplCommandCodegangsta_cliMainGoTmpl() (*asset, error) {
	bytes, err := resourceTmplCommandCodegangsta_cliMainGoTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "resource/tmpl/command/codegangsta_cli/main.go.tmpl", size: 329, mode: os.FileMode(420), modTime: time.Unix(1434251196, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _resourceTmplCommandCodegangsta_cliVersionGoTmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x2a\x48\x4c\xce\x4e\x4c\x4f\x55\xc8\x4d\xcc\xcc\xe3\xe2\x4a\xce\xcf\x2b\x2e\x51\xf0\x4b\xcc\x4d\x55\x28\x2e\x29\xca\xcc\x4b\x57\xb0\x55\x50\xaa\xae\x56\xd0\x03\x0b\xd5\xd6\x2a\x41\x55\x84\xa5\x16\x15\x67\xe6\xe7\xa1\x29\x82\x89\x82\xd4\x01\x02\x00\x00\xff\xff\x61\x03\x18\x7c\x58\x00\x00\x00")

func resourceTmplCommandCodegangsta_cliVersionGoTmplBytes() ([]byte, error) {
	return bindataRead(
		_resourceTmplCommandCodegangsta_cliVersionGoTmpl,
		"resource/tmpl/command/codegangsta_cli/version.go.tmpl",
	)
}

func resourceTmplCommandCodegangsta_cliVersionGoTmpl() (*asset, error) {
	bytes, err := resourceTmplCommandCodegangsta_cliVersionGoTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "resource/tmpl/command/codegangsta_cli/version.go.tmpl", size: 88, mode: os.FileMode(420), modTime: time.Unix(1434251196, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _resourceTmplCommandGo_cmdCommandGoTmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x6c\x90\xcf\x4a\xf4\x40\x10\xc4\xcf\x99\xa7\x28\x72\x58\x76\x21\x64\xbf\x73\xe0\x3b\xa8\x20\x1e\x16\x0f\x06\xbd\x88\xb0\x63\xd2\xc9\x0e\x3b\x99\x09\xf3\x47\x5d\x42\xde\xdd\x1e\x23\x22\x98\x40\x20\xf4\xaf\xaa\xd2\xd5\xa3\x6c\xce\xb2\x27\x0c\x52\x19\x21\xde\xa4\x43\x33\xb4\xd3\x84\xa0\x82\x26\x94\xf7\x72\x20\xcc\x33\xfe\x63\x73\x63\x87\x41\x9a\x76\x12\xd9\x43\x34\x15\x96\xc7\x45\xf3\x47\x5c\x88\xec\xd1\x73\xe6\x41\x19\xaa\x90\x33\xff\x89\xc9\x99\xd5\x27\xeb\xc2\xe2\xff\x62\xf5\xc5\xd8\xd1\x2b\xcf\x3c\xe1\x83\x35\x7d\x85\xa3\x48\xe8\x8e\xf4\xc8\x63\x91\x1d\x0b\x31\x0b\xd1\x45\xd3\x40\x19\x15\xb6\xbb\x49\x24\xff\x7e\x8f\x9a\x02\x2e\x36\x3a\x74\x5a\xf6\x38\x91\x23\x68\x75\x26\xbc\x92\xb6\xef\xa5\xc8\x58\xb2\x56\xa8\xbc\x65\x79\x79\x6d\xad\x7e\x92\x6e\xbb\x49\xe6\xab\x02\xb9\xcc\x0b\x74\x52\x7b\xe2\xef\x7c\x97\xfe\xc9\xfe\xb5\x8e\xa0\x0f\x6a\x62\x20\x8f\xdf\xf5\x9a\xe5\x44\x48\xaf\xa3\x10\x9d\x61\x9d\x0a\x3c\x6f\xa9\xc4\xb2\xff\x5a\xda\x56\xba\xde\xe3\xf9\xc5\x07\xa7\x4c\xbf\xe3\x8e\x01\x7c\xe7\xef\x88\x7f\xbc\xc7\x67\x00\x00\x00\xff\xff\x57\xcf\x7f\x0a\xa7\x01\x00\x00")

func resourceTmplCommandGo_cmdCommandGoTmplBytes() ([]byte, error) {
	return bindataRead(
		_resourceTmplCommandGo_cmdCommandGoTmpl,
		"resource/tmpl/command/go_cmd/command.go.tmpl",
	)
}

func resourceTmplCommandGo_cmdCommandGoTmpl() (*asset, error) {
	bytes, err := resourceTmplCommandGo_cmdCommandGoTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "resource/tmpl/command/go_cmd/command.go.tmpl", size: 423, mode: os.FileMode(420), modTime: time.Unix(1434251196, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _resourceTmplCommandGo_cmdCommand_testGoTmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x2c\xca\x31\x0e\xc2\x30\x0c\x05\xd0\x19\x9f\xe2\xab\x13\x30\xb4\x87\x60\x67\xaa\xc4\x1c\xa5\x9f\x62\x81\x93\xca\xb8\x03\x8a\x72\x77\x18\x18\x9f\xf4\xb6\x94\x9f\x69\x25\x2c\x69\x11\x51\xdb\xaa\x07\x86\xe0\x3b\xb4\xac\x83\xc8\x7d\x2f\x19\xf3\x8f\x17\x5b\x5a\x43\x68\xbc\x88\xf1\x9a\x8c\xe8\xfd\x18\x38\xff\xeb\x38\x9f\xd0\xe4\x30\x4d\xb8\xb9\x06\xf1\xa9\xbb\x23\xd7\x85\x78\xd0\x29\x5d\xbe\x01\x00\x00\xff\xff\xa3\xaf\x06\x5c\x69\x00\x00\x00")

func resourceTmplCommandGo_cmdCommand_testGoTmplBytes() ([]byte, error) {
	return bindataRead(
		_resourceTmplCommandGo_cmdCommand_testGoTmpl,
		"resource/tmpl/command/go_cmd/command_test.go.tmpl",
	)
}

func resourceTmplCommandGo_cmdCommand_testGoTmpl() (*asset, error) {
	bytes, err := resourceTmplCommandGo_cmdCommand_testGoTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "resource/tmpl/command/go_cmd/command_test.go.tmpl", size: 105, mode: os.FileMode(420), modTime: time.Unix(1434251196, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _resourceTmplCommandGo_cmdMainGoTmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x9c\x56\xdf\x6f\xdb\xb6\x13\x7f\xb6\xfe\x8a\xfb\xea\x8b\x20\xd2\xe0\xaa\x4d\x1f\xbd\xba\x40\x31\x2c\xc0\x80\xb6\x18\x96\x14\x7b\x70\x8c\x85\x96\x29\x9b\x88\x44\xa9\x24\x15\x27\x70\xf5\xbf\xef\xee\x48\xc9\xf2\xec\x20\xd8\xf2\x10\x4b\xe4\xfd\xbe\xcf\x7d\x4e\x8d\xc8\x1f\xc4\x46\x42\x25\x94\x8e\x22\x55\x35\xb5\x71\x90\x44\x93\x78\xd5\x16\xaa\x8e\xf1\xa1\x28\xc5\x86\x7f\x2b\x47\x3f\xfe\xb0\xac\xf9\xac\xb6\xf4\xdf\x3a\xa3\xf4\x86\x1f\x9d\x7c\x72\x6f\x9d\xac\x9a\x52\x38\x19\x47\x69\x14\xbd\x7d\x0b\x9f\xe0\x97\xba\xaa\x84\x5e\x83\xb2\x20\x34\xa0\x97\x52\x56\x52\x3b\xe1\x54\xad\xa1\x2e\x40\xc0\x7e\x0f\xd9\x57\x51\x49\xe8\x3a\xc8\xbd\x74\xe4\x9e\x1b\x39\xa8\xa2\x93\x36\x77\xb0\x8f\x26\x68\xf1\x8f\x56\x83\x69\xb5\x05\xb7\x95\xbd\x78\xc6\x37\xb7\x78\x20\xcc\x06\xfd\x18\xc9\xb7\xf8\xd2\x92\x2f\x3c\x29\x9c\x34\x63\x0d\xd0\xe8\x10\xd5\xc8\x5a\xd1\xea\x3c\x61\xc5\xc5\xd2\xe7\x93\x82\xd2\x2e\x62\xa3\xdf\x2c\x96\xe8\xb3\xd2\x92\x12\x20\x03\xb5\x96\x6f\x4a\x7a\x6f\x2d\x17\x4f\x5a\xfa\x3d\x44\x50\x28\x63\x1d\xec\x6a\x83\x29\x6b\xd6\x28\x7b\x6d\xf1\x20\xf1\xa4\x86\x95\x3c\x17\xca\xc1\x93\x0f\xc2\xfb\xbf\xd9\x52\x57\x82\x6f\xcb\x2f\x6b\x69\x73\xa3\x1a\x2e\x20\x9e\xec\x74\xef\xe8\x72\x5c\xc9\xad\x2c\x9b\x4b\xa8\x5b\xd7\xb4\x0e\xad\x7b\x3b\x63\xcb\x9f\x6b\xbd\xe9\x0d\x97\xf4\x1c\x52\x79\xc5\x26\x7c\x70\x5b\x65\xdf\x84\xe0\x3f\x8e\x5c\xb0\xc1\xb1\x87\x6b\x84\x0f\xf7\x1d\xac\x74\xd4\x6b\xc2\x93\x05\xdb\xc8\x5c\x15\x2a\xa7\x52\x90\xad\x51\x17\x59\x83\xa4\x32\x7a\xba\x91\x2e\xea\x18\x46\x1c\x80\x91\xae\x35\xc7\x8d\xbf\xb4\x5c\xbd\x19\x9f\x9d\x56\xde\xb7\x88\xea\x9f\x45\xd4\x65\x48\x72\xf8\x29\xa0\x2a\x65\xa3\x49\x1a\x22\x26\x74\x91\x29\x98\xcd\x21\xcf\x86\x5e\x44\x13\x45\x27\x01\xe6\xd9\x6f\x7a\x2d\x9f\x12\x92\x9b\x42\x0c\x71\x8a\xd7\x05\x28\xf8\x38\x87\x77\x64\xc0\x5b\x98\x73\x4c\x8b\x99\x5a\x46\x93\x2e\x9a\xf8\xb0\xf9\x8c\xb2\x39\x8d\x83\x9d\x61\x20\x68\x00\x07\x2d\xbb\x6e\xd0\x97\x2b\x92\xda\x66\x37\x6e\x2d\x8d\x41\x57\x9c\xc8\x0c\x2e\xec\x9d\xbe\xd3\xf1\x74\x1c\x61\xfa\xb2\x16\x89\xa3\x70\x1f\xfc\xad\x51\xd5\x0d\x0e\xbd\x4c\xf2\x8c\x7a\x95\xa2\x2a\x8a\xff\xfa\xa4\x5c\xf2\x3e\x0d\x95\x0e\x51\x59\xac\x9a\x75\xbe\xd6\xe2\x51\xa8\x52\xac\xca\xa1\xea\x34\xc9\x6b\x0f\x06\x57\x37\x2a\xb7\x59\x14\xc0\x8f\xb5\xc7\x39\xdb\x4a\x73\x18\x17\x3e\xc1\x7e\xec\xb6\x2a\xdf\xd2\xd1\x33\xcf\x27\x87\x2b\xd7\xb0\x7a\x3e\x03\xdb\x2c\x7a\x14\xe6\xe0\x6d\x8e\x83\xd9\x97\x6b\x1f\x01\xfe\xa1\x86\x11\x1a\x7b\x9b\x0d\xf1\x76\x5d\x5e\xad\xf1\xdc\x29\x87\x91\xf6\xf6\xa6\xbd\xb8\xc4\x88\xbb\x6e\x68\x00\x71\x1e\x97\x1c\xab\x47\x70\xe3\x72\xa2\x23\x2e\x74\x38\xfb\x5d\x18\x8b\x7d\x89\x26\xc8\x78\x19\x62\x91\x20\x69\x93\x77\x48\x6c\x13\x66\x0b\xc4\x05\xcb\x7d\xc2\x97\xc4\x43\xa1\x94\x9a\x99\x24\x85\x0f\x70\xc5\x88\x68\x7d\x73\x09\x09\x2c\x41\xb7\x8b\x77\x4b\x98\xcf\x21\xa6\x5c\x63\x96\xa2\x27\x56\x5c\x5c\xcd\x96\x28\x1c\x40\xe3\xb5\x8a\xda\xc0\x5f\xd8\xf3\x6a\x4d\x2e\x7d\xde\x43\x6d\x48\x1b\xcd\xe2\x65\x16\xf0\x8c\x96\x7b\x27\x74\x39\xa1\xab\xeb\x71\x8e\xcc\x77\x98\x3b\x2b\xf5\xe0\x23\x47\x23\x59\x9f\xfb\x38\x22\x9f\xf3\x1c\x06\x91\x90\x36\x5d\xf5\x28\xa2\x3b\x64\x54\x5f\x02\x52\xea\x42\x06\x2f\x00\x74\xd4\xf8\x19\xb4\xfa\x41\x13\xf1\xd8\x76\xd5\x33\xe3\xc5\xf7\x3b\x4d\x0c\x7d\x09\xa7\xcc\x46\x55\xe1\xe2\x66\x0c\xf2\x90\xf2\x09\xa4\x09\x48\x2c\x76\x1b\x36\x13\xa6\x70\x3f\xb6\xc6\xfc\xe4\xea\xba\x24\x8b\x59\x96\x45\x11\x97\x64\x86\x61\x9f\x59\x4c\xb0\x18\x96\xca\x32\x8a\x6e\xb7\xe3\x99\x30\xa8\xb4\xdf\x63\x52\x01\x9a\x5d\x17\x23\xe2\x26\x7c\xe4\xed\xfc\xf0\xb0\x2f\x00\x2f\xe2\x8b\x37\x57\x57\x16\xaf\xf0\x19\xd3\xcb\x98\xa0\xbb\x6e\xbf\x47\xa4\x7a\x4d\x0c\x44\x1e\xd5\xc8\x8f\xdc\x22\x78\x5c\xc6\x5c\x83\xaa\xa6\x61\xd3\xf8\x58\xf9\x9d\x2a\x56\xc8\xc8\x98\xd3\xc0\xaa\xd1\xbd\x2f\x03\x69\x8f\xab\x10\x48\x65\xec\xc0\xc7\x3a\x70\x4b\x88\xc3\x9f\x32\xbd\xff\x00\x24\x93\xca\x9f\xdf\x33\x61\x38\x34\x08\xf2\x49\xe6\xad\x93\x7e\xe4\x37\xea\x91\xf6\x5c\xef\x89\xbe\x0b\x70\x6b\xc2\x5a\x38\x31\x85\x9d\x51\x8e\xe8\x96\x04\x8d\xb4\x6d\xe9\x68\x0d\xec\x02\x3f\x93\xb1\x64\x07\xaa\xce\xfe\x44\x39\x89\x18\x61\x6d\xcf\x60\x53\x36\x41\xab\x59\x9a\x02\x69\x6c\xdf\x31\x67\x3a\x9a\x8a\xde\x5b\xf6\x55\xee\x92\x18\x59\x89\xb8\x19\x41\x87\x46\x6d\x32\x5c\xd2\xeb\x17\xd1\xec\x63\x4a\x22\x9e\x9d\x32\x63\x47\x5a\xbd\xf4\x97\xd6\xba\xc4\x85\x51\xa0\x38\x52\x3f\xe4\x88\x5d\x76\x89\x30\xe3\xac\x93\x9d\x8f\x2c\xfd\x99\xaf\xfe\x87\xfc\xaf\x4a\x9e\xbd\x46\x68\x95\x27\x78\xc8\xf3\xdf\x73\x0f\x63\xc0\xcf\xdd\x28\x55\xce\x65\xb5\x23\xcb\xfc\xfd\x45\x99\xf8\x9b\x64\x47\x51\x51\x65\x56\xe8\xe9\x08\xcc\xd3\x01\x7e\x29\x29\xe3\x60\xb6\x76\x9b\xa4\x83\xab\xf6\xb0\x5a\x46\x5e\x87\x11\x3c\xb7\x00\x18\x63\xc3\x67\x9a\xef\xe8\xa5\x1f\xb9\x01\x51\x6c\x7b\xe0\xac\xd1\x67\xd3\xfe\x1f\x2c\x38\xef\x17\xe3\x89\x77\xc4\x28\x11\x04\x3a\xd4\xb5\x43\xfc\x28\x07\xef\xb1\x21\x6d\x9e\x4b\xb9\xc6\xbd\x20\xdc\xd9\xbd\x30\x66\xc6\x63\x57\x58\x76\xcf\xb8\xaf\xec\xd0\x93\x79\x0a\x59\xd1\x66\xbd\xad\x6b\xdc\x0c\xfa\x79\xf4\xe5\xc8\x60\x26\x8a\xa1\x68\x0f\xc5\x02\x0c\xbc\xc0\xb5\xf8\x52\xa4\x9e\xf7\xd0\x0c\xf5\x33\x70\xd3\x7f\xa5\x72\x4f\xe3\x0c\x80\xa1\x76\xd3\xa3\x69\x66\x8b\x4c\xd2\xff\xaa\x9e\xa4\xc5\x35\x1d\x8a\xfa\x1a\x61\x7f\x0b\x1c\x7d\xd8\xfd\x70\xf1\xff\xef\x19\xf0\x57\xf9\x99\x7e\xf5\xd4\x7c\x04\xb4\x57\x6a\xc7\x51\x21\x18\xff\x0e\x00\x00\xff\xff\xd1\xe5\xea\x49\x9f\x0c\x00\x00")

func resourceTmplCommandGo_cmdMainGoTmplBytes() ([]byte, error) {
	return bindataRead(
		_resourceTmplCommandGo_cmdMainGoTmpl,
		"resource/tmpl/command/go_cmd/main.go.tmpl",
	)
}

func resourceTmplCommandGo_cmdMainGoTmpl() (*asset, error) {
	bytes, err := resourceTmplCommandGo_cmdMainGoTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "resource/tmpl/command/go_cmd/main.go.tmpl", size: 3231, mode: os.FileMode(420), modTime: time.Unix(1434251196, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _resourceTmplCommandMitchellh_cliCliGoTmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x5c\x52\x4f\x8b\xdb\x4e\x0c\x3d\xdb\x9f\x42\x3f\xc3\xaf\xd8\x90\x3a\xf4\x1a\xd8\x43\x37\x34\x74\xa1\x7f\x60\x4b\xda\x43\x9a\xc3\xac\x2d\x27\xa2\xf6\x8c\x99\x91\xe9\x96\xe0\xef\x5e\x69\x6c\x6f\xb2\xcd\x21\x33\x7e\x4f\xf3\x24\x3d\xa9\x37\xd5\x2f\x73\x42\xe8\x0c\xd9\x34\xa5\xae\x77\x9e\x21\x4f\x93\xac\xe9\x38\x93\xc3\x85\x2c\x95\xe3\x44\x7c\x1e\x9e\xca\xca\x75\xeb\x8e\xb8\x3a\x63\xdb\x9e\xd7\x55\x4b\xd9\x6b\xee\x72\x29\xbf\xfe\xb6\xe8\xc7\x51\xaf\x5f\x4c\x87\x72\x13\xa2\x33\xb6\xce\xd2\x22\x4d\x9b\xc1\x56\xf0\x38\xd8\xdc\xf8\x53\x80\xc3\x31\xb0\x27\x7b\x2a\x80\x2c\xc3\x45\x12\xad\xd7\xf0\x19\xd9\xbc\x75\x3d\x93\xb3\xd0\x38\x0f\xf8\x8c\xd5\xc0\xe6\xa9\xc5\x50\xc6\x80\x07\x86\x1a\x1b\xb2\x18\xc0\x0d\xdc\x0f\x0c\x95\x6b\x25\x50\x72\x00\x71\x80\xc0\xb5\xe0\x6b\x39\xd0\x7b\xf9\xf2\x68\x3a\x79\xd9\x89\x2e\x6c\xee\xe0\xcd\x5c\x4f\xa9\x89\x2e\x69\x92\xec\x69\x23\x60\x4b\xe5\x56\x65\xb0\xde\x93\xa2\xc9\x83\x6d\x5c\x44\x36\x00\xca\xee\x29\x7e\xdd\xb7\x03\xae\x94\xff\xe0\xbd\xf3\x73\xc0\x0d\xff\x88\x75\xa4\x5f\x54\xef\x4d\xa0\x6a\xd6\x4c\x7e\x78\x62\x54\x45\xfd\xb9\x50\x7e\x8b\xb5\xc6\x07\x93\xe0\x12\x30\x71\xd2\xc0\xc4\x3d\xa2\xa9\xff\x79\x47\x36\x52\xa3\xfe\x8f\xa3\x78\xe7\x91\x07\x6f\xd5\xdd\xed\x10\xd8\x75\xd1\xe3\x15\x6c\xa7\x76\x43\xae\x06\x14\x45\x3a\x5e\xa7\x70\x13\xf7\x32\x8b\x15\xcc\xfe\x04\xd9\x89\xfe\x30\x81\xc7\xc9\x9e\x88\xef\x4c\xc5\xce\xff\xb9\xce\x4c\xb8\xc9\x57\x8d\xf9\xf4\xa0\x8d\xbe\x17\xc5\xb9\x58\x50\xf5\xc3\xbb\xcd\x51\xeb\x5c\x6a\x51\x6e\x49\xa3\xf8\x77\xf4\x41\xe6\x1d\x9f\xcc\x77\x85\x3f\x62\xdb\xef\xa4\xd6\x18\xbe\x58\xb9\x80\xb9\xae\x57\xb1\x84\xbd\xf6\x6d\xf2\x54\x4d\xc1\x67\xe2\xad\xab\x71\x05\xba\x0c\x52\xa6\xea\xe8\x02\x16\x69\x42\x4d\x04\xff\xbb\x03\x4b\x2d\x68\xdd\xb2\xf4\xe5\xae\x97\x8e\xb9\xc9\xaf\x13\x80\x6c\x67\xa8\xc5\x1a\xd8\xcd\xdb\x88\x1b\xf8\x3f\xfc\xb4\x59\x54\x2d\xe3\xe0\x72\xb1\x36\xb9\x19\xc3\x92\x58\xfc\xfe\x1b\x00\x00\xff\xff\x5a\xfc\xde\xfc\x64\x03\x00\x00")

func resourceTmplCommandMitchellh_cliCliGoTmplBytes() ([]byte, error) {
	return bindataRead(
		_resourceTmplCommandMitchellh_cliCliGoTmpl,
		"resource/tmpl/command/mitchellh_cli/cli.go.tmpl",
	)
}

func resourceTmplCommandMitchellh_cliCliGoTmpl() (*asset, error) {
	bytes, err := resourceTmplCommandMitchellh_cliCliGoTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "resource/tmpl/command/mitchellh_cli/cli.go.tmpl", size: 868, mode: os.FileMode(420), modTime: time.Unix(1434251196, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _resourceTmplCommandMitchellh_cliCommandCommandGoTmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x8c\x90\x31\x6b\xfb\x30\x10\x47\xe7\xdc\xa7\xf8\xe1\x49\xfa\x0f\xce\x7f\x2e\x74\xea\xd2\xa5\x1d\x9a\x40\x87\x52\x88\x50\xae\x8e\x68\x24\x0b\xe9\x04\x35\xc6\xdf\xbd\x12\x4e\x0a\x1d\x0a\xd1\x28\xee\xbd\x77\x5c\x34\xf6\xd3\x0c\x0c\x3b\x7a\x6f\xc2\x91\xc8\xf9\x38\x26\x81\x22\xd4\xd7\x65\x49\x2e\x0c\xb9\x23\x4d\x24\x53\x64\xcc\x33\xc4\xc9\x99\xd1\x3f\x1b\xcf\x58\x96\x87\x15\x44\x9d\x2c\x56\x30\xd3\xe6\x89\xc5\xd0\x42\xf4\x51\x82\x85\xb2\xf8\xf7\x17\xa3\xf1\x52\x82\x32\x69\xc8\x78\x7b\x5f\x4b\x1a\x2e\x34\x49\x8b\x6f\xb7\x78\x4d\x4e\x18\xd3\x58\x52\x5d\xf0\xc8\x38\x71\x62\xda\x24\x96\x92\x02\xfe\xdf\x18\xd9\x4d\x61\x8c\xd9\x65\xa5\xb1\x46\xda\x92\x17\x47\x57\xb1\xfe\x3a\x50\xa1\xee\x46\xe7\x23\x9f\xe3\x2f\xdf\xa9\x7e\xec\xf9\x4b\x70\x77\x8f\x03\x35\x6b\x1b\xa9\x08\x1d\x7e\x62\x97\x63\xf6\xfb\xe4\xfc\xae\x1e\x9e\xd5\x95\xd2\x35\xfb\x1d\x00\x00\xff\xff\xcc\xc7\xb5\xd5\x8a\x01\x00\x00")

func resourceTmplCommandMitchellh_cliCommandCommandGoTmplBytes() ([]byte, error) {
	return bindataRead(
		_resourceTmplCommandMitchellh_cliCommandCommandGoTmpl,
		"resource/tmpl/command/mitchellh_cli/command/command.go.tmpl",
	)
}

func resourceTmplCommandMitchellh_cliCommandCommandGoTmpl() (*asset, error) {
	bytes, err := resourceTmplCommandMitchellh_cliCommandCommandGoTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "resource/tmpl/command/mitchellh_cli/command/command.go.tmpl", size: 394, mode: os.FileMode(420), modTime: time.Unix(1434251196, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _resourceTmplCommandMitchellh_cliCommandCommand_testGoTmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x74\xcc\xb1\x0e\x82\x30\x10\x87\xf1\x99\x7b\x8a\x7f\x18\x0c\x38\x94\x27\x70\x72\x77\x62\x27\xb5\x9e\xb4\xb1\x57\x08\x1e\x2e\x4d\xdf\xdd\x26\xb2\xba\x7d\xc3\x97\xdf\x6a\xdd\xcb\xce\x0c\xb7\x88\xd8\xf4\x20\x0a\xb2\x2e\x9b\xa2\xa3\xa6\x55\x7e\x6b\x48\x73\x4b\xb5\xe7\xa0\x7e\xbf\x9b\xba\x0d\x12\xd4\x79\x8e\xd1\x0f\x2e\x86\x96\x7a\xa2\xe7\x9e\x1c\xc6\x7a\xe7\x0c\x0d\x1a\x19\xe6\x66\x85\x51\xca\xf5\xc7\x4e\x55\x8d\x2c\x9c\xb4\x53\x9c\x0f\xd7\x8c\x3d\x32\x35\x1f\xbb\x61\x42\xa5\xcc\x31\xe3\x82\xd3\x3f\x28\x17\x2a\xf4\x0d\x00\x00\xff\xff\xaf\x1c\x77\x65\xb4\x00\x00\x00")

func resourceTmplCommandMitchellh_cliCommandCommand_testGoTmplBytes() ([]byte, error) {
	return bindataRead(
		_resourceTmplCommandMitchellh_cliCommandCommand_testGoTmpl,
		"resource/tmpl/command/mitchellh_cli/command/command_test.go.tmpl",
	)
}

func resourceTmplCommandMitchellh_cliCommandCommand_testGoTmpl() (*asset, error) {
	bytes, err := resourceTmplCommandMitchellh_cliCommandCommand_testGoTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "resource/tmpl/command/mitchellh_cli/command/command_test.go.tmpl", size: 180, mode: os.FileMode(420), modTime: time.Unix(1434251196, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _resourceTmplCommandMitchellh_cliCommandMetaGoTmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x2c\x8d\x4b\x0e\xc2\x30\x0c\x44\xd7\xf8\x14\x56\xf7\x34\x27\x61\xd9\x03\xb8\xa9\xd5\x58\x38\x1f\xb5\x93\x45\x85\xb8\x3b\x41\xb0\x9c\x27\xcd\x7b\x4d\xe2\x53\x76\xe5\x58\x73\x96\xb2\x11\x59\x6e\xf5\x00\x4f\xbb\x21\xf5\x75\x1e\x3c\x64\x43\x4c\xea\x9e\x42\x74\x9b\x88\x42\xe0\x87\x42\xc6\xa7\x40\xac\x30\x92\x72\x1e\xe0\x5e\x1b\xac\x7e\xb7\x80\x8b\x8a\x5f\x2c\xee\x7c\xf6\xf5\x6f\x67\x2b\x49\x0f\x83\x6e\x33\xe1\x6a\xfa\xd3\x9c\x38\x7a\x04\xbf\xe8\xb6\x18\x8f\xc2\xbc\x18\xbd\xe9\x13\x00\x00\xff\xff\xb0\x4b\xbf\x32\x99\x00\x00\x00")

func resourceTmplCommandMitchellh_cliCommandMetaGoTmplBytes() ([]byte, error) {
	return bindataRead(
		_resourceTmplCommandMitchellh_cliCommandMetaGoTmpl,
		"resource/tmpl/command/mitchellh_cli/command/meta.go.tmpl",
	)
}

func resourceTmplCommandMitchellh_cliCommandMetaGoTmpl() (*asset, error) {
	bytes, err := resourceTmplCommandMitchellh_cliCommandMetaGoTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "resource/tmpl/command/mitchellh_cli/command/meta.go.tmpl", size: 153, mode: os.FileMode(420), modTime: time.Unix(1434251196, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _resourceTmplCommandMitchellh_cliCommandsGoTmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x7c\x8f\xb1\x4e\xc4\x30\x0c\x86\xe7\xf8\x29\xac\x0c\xa8\x3d\x55\xbd\xfd\x56\x24\x36\xe0\x01\x10\x43\xc8\x85\x36\x22\x49\x2b\xd7\x15\x42\x55\xde\x1d\xa7\xd7\xa2\xb2\xdc\x66\xfb\xff\xed\xff\xf3\x68\xec\x97\xe9\x1c\x46\xe3\x13\x80\x8f\xe3\x40\x8c\x15\x28\xdd\x79\xee\xe7\x8f\xd6\x0e\xf1\x1c\x3d\xdb\xde\x85\xd0\x9f\x6d\xf0\xfa\xbf\xb6\x2c\xd8\xbe\x7e\x27\x47\x98\xf3\xda\xbc\x98\xe8\x4a\x2d\x62\x34\xe9\xaa\xa1\x06\xf8\x9c\x93\xc5\xc7\xdb\x60\xaa\xa2\x63\x83\xa7\x4d\x6f\x9f\xa5\xab\x25\x7e\x7c\x9b\x98\x7c\xea\xde\x25\xa3\xdd\xbc\x4f\xc6\xf2\x40\x3f\xb8\x80\x22\xc7\x33\xa5\xfb\x3e\xb1\x29\x41\x20\x93\xe4\xa1\x5d\x9b\x04\x46\xe6\xfa\xc0\xa6\x2f\x58\x88\xaa\x1a\xab\xc3\x91\x06\x1d\xd1\x40\x75\x49\x53\x7b\xde\xc3\x8e\x29\xeb\xec\x39\xb8\xbf\x23\xdb\xd6\x6a\x56\xe5\x89\x0b\x9e\xca\x67\x4d\x19\xe4\x06\x93\x0f\x50\x8a\x1b\x93\x4b\xd7\x95\x23\x43\x86\xdf\x00\x00\x00\xff\xff\xd2\xe6\xf6\x40\x73\x01\x00\x00")

func resourceTmplCommandMitchellh_cliCommandsGoTmplBytes() ([]byte, error) {
	return bindataRead(
		_resourceTmplCommandMitchellh_cliCommandsGoTmpl,
		"resource/tmpl/command/mitchellh_cli/commands.go.tmpl",
	)
}

func resourceTmplCommandMitchellh_cliCommandsGoTmpl() (*asset, error) {
	bytes, err := resourceTmplCommandMitchellh_cliCommandsGoTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "resource/tmpl/command/mitchellh_cli/commands.go.tmpl", size: 371, mode: os.FileMode(420), modTime: time.Unix(1434251196, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _resourceTmplCommandMitchellh_cliMainGoTmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x2a\x48\x4c\xce\x4e\x4c\x4f\x55\xc8\x4d\xcc\xcc\xe3\xe2\xca\xcc\x2d\xc8\x2f\x2a\x51\x50\xca\x2f\x56\xe2\xe2\x4a\x2b\xcd\x4b\x06\x8b\x6b\x68\x2a\x54\x73\x71\xe6\x17\xeb\xb9\x56\x64\x96\x68\x04\x95\xe6\x69\x00\xd9\x8e\x45\xe9\xc5\x9a\x9a\x5c\xb5\x5c\x80\x00\x00\x00\xff\xff\x99\x87\x66\x6a\x42\x00\x00\x00")

func resourceTmplCommandMitchellh_cliMainGoTmplBytes() ([]byte, error) {
	return bindataRead(
		_resourceTmplCommandMitchellh_cliMainGoTmpl,
		"resource/tmpl/command/mitchellh_cli/main.go.tmpl",
	)
}

func resourceTmplCommandMitchellh_cliMainGoTmpl() (*asset, error) {
	bytes, err := resourceTmplCommandMitchellh_cliMainGoTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "resource/tmpl/command/mitchellh_cli/main.go.tmpl", size: 66, mode: os.FileMode(420), modTime: time.Unix(1434251196, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _resourceTmplCommandMitchellh_cliVersionGoTmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x2a\x48\x4c\xce\x4e\x4c\x4f\x55\xc8\x4d\xcc\xcc\xe3\xe2\x4a\xce\xcf\x2b\x2e\x51\xf0\x4b\xcc\x4d\x55\x28\x2e\x29\xca\xcc\x4b\x57\xb0\x55\x50\xaa\xae\x56\xd0\x03\x0b\xd5\xd6\x2a\x41\x55\x84\xa5\x16\x15\x67\xe6\xe7\xa1\x29\x82\x89\x82\xd4\x01\x02\x00\x00\xff\xff\x61\x03\x18\x7c\x58\x00\x00\x00")

func resourceTmplCommandMitchellh_cliVersionGoTmplBytes() ([]byte, error) {
	return bindataRead(
		_resourceTmplCommandMitchellh_cliVersionGoTmpl,
		"resource/tmpl/command/mitchellh_cli/version.go.tmpl",
	)
}

func resourceTmplCommandMitchellh_cliVersionGoTmpl() (*asset, error) {
	bytes, err := resourceTmplCommandMitchellh_cliVersionGoTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "resource/tmpl/command/mitchellh_cli/version.go.tmpl", size: 88, mode: os.FileMode(420), modTime: time.Unix(1434251196, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _resourceTmplCommonChangelogMdTmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x52\x56\x56\xa8\xae\x56\xd0\x0b\x4b\x2d\x2a\xce\xcc\xcf\x53\xa8\xad\x55\xd0\x00\xf2\x53\x12\x4b\x52\x81\x6c\x4d\x2e\x2e\xcf\xbc\xcc\x92\xcc\xc4\x1c\x85\xa2\xd4\x9c\xd4\xc4\xe2\x54\x2e\x2e\x65\xa0\x0e\xc7\x94\x94\xd4\x14\x2e\x2e\x5d\x10\x43\xc1\xad\x34\x2f\x25\x31\x37\x35\xaf\x04\xa8\x2a\x2d\x35\xb1\xa4\xb4\x28\xb5\x18\xa2\xcc\x25\xb5\xa0\x28\x35\x19\x68\x14\x58\xad\x5f\x7e\x49\x46\x66\x5e\x3a\x44\x2a\x28\x35\x37\xbf\x0c\x8b\xb8\x5b\x66\x05\xaa\x28\x20\x00\x00\xff\xff\xf6\x0c\x35\xa7\xa0\x00\x00\x00")

func resourceTmplCommonChangelogMdTmplBytes() ([]byte, error) {
	return bindataRead(
		_resourceTmplCommonChangelogMdTmpl,
		"resource/tmpl/common/CHANGELOG.md.tmpl",
	)
}

func resourceTmplCommonChangelogMdTmpl() (*asset, error) {
	bytes, err := resourceTmplCommonChangelogMdTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "resource/tmpl/common/CHANGELOG.md.tmpl", size: 160, mode: os.FileMode(420), modTime: time.Unix(1434251196, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _resourceTmplCommonReadmeMdTmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x94\x50\x4d\x6b\xe3\x30\x10\xbd\xeb\x57\x0c\x64\x0f\x09\xec\xda\xec\x35\xb7\x25\x4b\xa1\x97\xb6\x84\xf6\x14\x0a\x1a\x3b\x63\x4b\xd4\x92\x52\x69\x44\x28\x21\xff\xbd\x23\xb9\xa5\xe9\xa9\xed\xc1\x58\x7a\xa3\xf7\x31\x6f\x01\xa7\x13\x34\x37\xe8\x08\xce\x67\xa5\xca\xe5\x3f\xa5\x3e\xda\x03\xdb\xe0\x2b\xb6\x58\xc0\x05\x54\xef\x0f\x09\x47\xaa\xa7\x6b\x9f\x18\xa7\x49\xa9\xfb\x00\x76\x3e\xff\x86\x9c\x08\xf4\x18\x60\x24\xd6\x6b\xa5\xb4\xd6\x1d\x26\xa3\x7e\xc1\x8c\xc1\x9f\x3d\x8c\x96\x4d\xee\x9a\x3e\xb8\xb6\x78\xde\x1e\x3d\x45\x71\x6b\x2f\xd3\x08\xaf\x7a\x6c\x82\xe7\x68\xbb\x3c\xdb\xff\x6d\xe0\x2a\xc4\x27\x58\xee\x0c\xf3\x21\xad\xdb\xf6\x1b\x5a\xed\x20\x94\xc7\xe5\x4f\x19\xab\x55\xb1\xdb\x44\x42\x26\x40\x18\xe4\x9f\x23\x41\x17\xd1\xf7\xa6\x8e\x82\x73\x96\xe1\x25\xe4\x08\xbd\x41\x3f\x52\x2a\xf0\x96\x64\x61\x9a\xe1\x29\xf4\x38\xbd\x0f\x01\x47\x2c\x35\x01\x1b\x02\x87\x89\xc5\xf7\x43\x6d\x9b\x3d\x30\xc9\x34\x65\x2b\x86\x47\x49\x59\x1f\x96\x2e\x2b\xde\xb4\x4d\xd3\x68\x90\xdc\x0e\xfd\x1e\xca\xd7\x07\x3f\xd8\xe8\xe4\x1d\x32\x48\x94\x03\xa6\xf4\x16\x42\xd4\x84\x39\x38\x29\x3c\xe9\x4f\x8b\x78\x3a\xc2\x5d\x9e\x26\x09\xfa\x9c\x45\xb8\xd6\xfc\x2f\xb3\x09\x51\xa9\xdd\x65\x25\x5f\x76\xb6\x52\xaf\x01\x00\x00\xff\xff\xb5\x89\x6c\xef\x43\x02\x00\x00")

func resourceTmplCommonReadmeMdTmplBytes() ([]byte, error) {
	return bindataRead(
		_resourceTmplCommonReadmeMdTmpl,
		"resource/tmpl/common/README.md.tmpl",
	)
}

func resourceTmplCommonReadmeMdTmpl() (*asset, error) {
	bytes, err := resourceTmplCommonReadmeMdTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "resource/tmpl/common/README.md.tmpl", size: 579, mode: os.FileMode(420), modTime: time.Unix(1434251196, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _resourceTmplFlagFlagCliGoTmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x6c\x53\x41\x4f\xdc\x3c\x10\x3d\xc7\xbf\x62\xbe\x48\x48\x1b\xbe\x95\x29\x57\x2a\x2e\xa5\x20\x55\x20\x16\x75\xab\xf6\x40\x51\xe5\x86\xc9\xe2\x92\xd8\xa9\x3d\xde\x6d\xb5\xca\x7f\xef\x8c\xb3\x59\x40\xc0\x81\x24\xcf\x6f\xde\x9b\x37\xe3\xed\x4d\xfd\x68\x56\x08\x9d\xb1\x4e\x29\xdb\xf5\x3e\x10\xcc\x54\x51\x36\x1d\x95\xfc\xb0\x5e\xfe\x37\xad\x59\x95\xaa\x52\xea\xe8\x08\xce\xff\x58\x82\xda\xdf\x63\x04\x13\x10\xac\x23\x58\x9b\x36\xf1\x27\x3d\x18\x82\x80\x7d\xc0\x88\x8c\x1a\x07\x38\x71\xa1\xf1\x01\x0c\xf4\x26\x90\xad\x53\x6b\x02\x60\x08\x3e\x68\x55\x7b\x17\xb3\xa1\xc8\x9e\x31\x73\x71\x09\xfc\x27\xaa\xa7\xf0\xee\x09\x3e\x17\xfa\x0e\x3e\x86\xff\xc1\x7a\x32\xbb\x86\xce\xae\x3e\x81\x15\x77\x64\xab\xae\x33\xee\x1e\x5a\xeb\x10\xfc\xcf\x5f\x58\x93\xa2\xbf\x3d\x66\x4e\xa4\x90\x6a\x82\xad\x2a\xb8\xc8\x27\x5a\x52\x40\xd3\x81\xf0\xb9\x99\xe9\x8b\x23\x89\x52\xa4\x7b\xa6\xe4\x43\x7e\xe5\xf3\x5c\x45\x1e\x36\xc1\x12\x8f\x0b\x63\x94\xb1\x35\xc1\x77\x99\xcf\x06\x5a\x15\x7b\xd5\xf9\x33\x49\xeb\xf5\x37\x29\x0a\x6a\xc8\xfd\x7e\x4e\x8e\x83\xac\xfd\x23\xc6\xa9\x14\x36\x96\x1e\xf2\xc7\xca\xae\xd1\x71\x17\xab\xd4\xf1\x0c\xa3\x56\x4d\x72\x35\xcc\xea\xd6\xc2\x21\x13\x2b\xa9\x9e\xf1\x71\x84\xdb\x3b\x0e\x64\xdd\xaa\xca\x53\xd9\xaa\xdc\xe0\x47\x6c\x72\xf4\x9e\xac\x77\x20\x6b\x93\x99\x47\x54\x85\xbc\x47\x38\x39\xcd\xa0\xbe\xc6\xcd\x05\x3f\x97\x48\xb3\x6b\xd3\xe1\x7c\x44\xcf\xbc\x23\xeb\x12\x2e\x5c\x1e\x77\xa5\x64\x15\xb9\x50\x33\x73\x91\xa8\x4f\x24\xad\xe8\x7d\x38\xde\x80\x70\xb6\x5b\x08\xc6\xf1\x3c\xf4\x45\xb6\x19\x06\x31\x64\x94\x2c\xb5\x8c\x8a\x07\x83\x93\x7d\xd4\xdb\xad\xfe\xc2\x7b\x59\xe6\x04\xc3\x30\x2b\x19\xb8\xf2\x6e\x25\xc4\x61\x28\xe7\xa2\xa8\x39\x8c\x49\x2d\x71\xe1\x1c\xca\x11\x88\x75\xb0\x63\x36\x66\x55\xaa\x60\x14\x79\x45\xa3\xdf\x57\x0c\x51\x8e\xf6\x2e\x1f\xbc\x6f\x67\xe5\x7a\x84\x59\xb4\x31\x6d\xe4\xac\xe5\x4d\xc8\xb7\x76\x47\xb7\x8e\x2f\x67\x67\xb2\xaa\xec\xfb\x77\xb2\xa4\x59\x3c\x0f\xf4\x46\xa6\x37\xdd\xab\x7c\xad\x44\x5a\x15\xb6\x91\x0d\x3f\x59\x65\x5e\x5e\xcc\xed\xf1\xc9\x5d\xf5\x3e\x9f\xfe\x77\x0a\xce\xb6\x72\xe3\x8a\x80\x94\x82\x83\x17\xd7\x59\x15\xc3\x68\xb2\x7c\xf0\x9b\xa9\x9d\x2c\x7d\xf8\x14\x46\x8a\xf9\xb7\xa8\x2f\x7a\x69\xba\x79\x39\x7e\xce\x72\x10\xf7\x41\x0e\xe2\x77\x49\x39\x2e\x74\x57\x5f\xbd\xf6\x5e\x5c\x8e\xc6\x6f\x2d\xed\x07\x48\xa0\x57\x8b\x7b\x3e\x68\xf5\x86\xde\xa0\xfe\x05\x00\x00\xff\xff\x70\xac\xd3\x7f\x48\x04\x00\x00")

func resourceTmplFlagFlagCliGoTmplBytes() ([]byte, error) {
	return bindataRead(
		_resourceTmplFlagFlagCliGoTmpl,
		"resource/tmpl/flag/flag/cli.go.tmpl",
	)
}

func resourceTmplFlagFlagCliGoTmpl() (*asset, error) {
	bytes, err := resourceTmplFlagFlagCliGoTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "resource/tmpl/flag/flag/cli.go.tmpl", size: 1096, mode: os.FileMode(420), modTime: time.Unix(1434251196, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _resourceTmplFlagFlagCli_testGoTmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xd4\x92\xcf\x8a\xdb\x30\x10\xc6\xcf\xd6\x53\x4c\x44\x53\xe4\xe2\xaa\xf7\x40\x2e\x0d\x29\x94\x86\x16\x9a\xd0\x6b\x51\x6d\xd9\x88\xc6\x92\x23\x8d\x77\xb3\x18\xbf\xfb\x8e\x6c\xe7\xcf\xee\x66\xcf\xcb\x9e\x3c\x96\x66\xbe\xf9\xcd\xa7\x69\x54\xfe\x5f\x55\x1a\x6a\x65\x2c\x63\xa6\x6e\x9c\x47\x10\x2c\xe1\xff\x1e\x50\x07\x4e\x41\x59\x63\xfc\x04\xf4\xc6\x56\xc3\x09\x5d\x20\xc5\x9c\xa5\x8c\x95\xad\xcd\x61\x47\x07\xbf\x5b\xfb\xf7\x4e\xfb\x60\x9c\xfd\xb6\x57\x95\x40\xf8\x34\xe5\xc9\x5d\x0a\x1d\x4b\x5c\x8b\x5b\xf4\x5a\xd5\x19\x68\xef\xc7\x10\x16\x4b\xb0\xfa\x5e\x0c\xcd\xe4\xd7\xb6\x2c\xb5\x4f\xb3\x97\x47\x2c\xc9\xf7\x26\x26\x7f\x5c\x6d\xbe\x77\x67\xa5\x05\xdc\x12\x5d\x5c\xc2\x9e\x25\xca\x57\x21\x56\x4e\xfc\x72\xdb\xec\x0d\x0a\x2e\xbf\x74\x1d\xc8\x9f\xaa\xd6\xd0\xf7\xf0\x79\x22\xe7\x19\x70\xe0\x34\x56\x12\x50\x61\x3b\x14\x52\x67\x49\xc3\x89\x28\x44\x20\xa6\x84\xe9\x6e\xb6\x84\xf5\xd1\xe0\xca\x15\xfa\xd7\x8f\x38\x61\x82\x72\xed\xbd\xf3\xa5\xe0\xfa\xd8\xe8\x1c\x75\x01\xf3\x02\xd0\x81\x3e\x50\x40\xe2\x63\x65\x76\x55\x47\x8a\x3d\xb5\x3b\xe7\x53\x43\x32\x9c\x28\x89\x16\x49\xe8\x9a\x72\x82\x84\x79\x20\xa9\x3f\xe3\xcf\x48\x34\x3b\x4d\xb7\x72\x16\xe9\x25\x83\x38\x5b\x20\xb7\xc3\x95\x20\x5b\x4f\x4d\xd2\x57\x61\x0f\x27\xd8\x03\xbf\x32\xf4\x96\x44\xc4\x26\x70\xc2\xf3\xca\xd2\xfe\xc8\xf8\xe8\x81\x28\x9f\x6e\x44\xc4\xdf\x38\x5b\x4d\x23\xbc\x9b\xcd\xf8\x70\x59\x8d\x67\x23\xbc\xd1\x8a\xf4\xd1\x6a\x6d\x8b\xe8\xf0\x63\x00\x00\x00\xff\xff\xc0\x04\x91\x1d\xb4\x03\x00\x00")

func resourceTmplFlagFlagCli_testGoTmplBytes() ([]byte, error) {
	return bindataRead(
		_resourceTmplFlagFlagCli_testGoTmpl,
		"resource/tmpl/flag/flag/cli_test.go.tmpl",
	)
}

func resourceTmplFlagFlagCli_testGoTmpl() (*asset, error) {
	bytes, err := resourceTmplFlagFlagCli_testGoTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "resource/tmpl/flag/flag/cli_test.go.tmpl", size: 948, mode: os.FileMode(420), modTime: time.Unix(1434251196, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _resourceTmplFlagFlagMainGoTmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x2a\x48\x4c\xce\x4e\x4c\x4f\x55\xc8\x4d\xcc\xcc\xe3\xe2\xca\xcc\x2d\xc8\x2f\x2a\x51\x50\xca\x2f\x56\xe2\xe2\x4a\x2b\xcd\x4b\x06\x8b\x6b\x68\x2a\x54\x73\x71\x26\xe7\x64\x2a\x58\xd9\x2a\xa8\x39\xfb\x78\x56\xe7\x97\x96\x04\x97\x14\xa5\x26\xe6\x5a\x29\xe4\x17\xeb\x05\x97\xa4\x00\x05\x74\x14\x52\x8b\x8a\x50\x45\x81\x02\xb5\x5c\x9c\x40\xb6\x6b\x45\x66\x89\x06\xd0\x00\xbd\xa0\xd2\x3c\x0d\x20\xdf\xb1\x28\xbd\x58\x53\x93\xab\x96\x0b\x10\x00\x00\xff\xff\xfc\x39\x7e\x56\x7f\x00\x00\x00")

func resourceTmplFlagFlagMainGoTmplBytes() ([]byte, error) {
	return bindataRead(
		_resourceTmplFlagFlagMainGoTmpl,
		"resource/tmpl/flag/flag/main.go.tmpl",
	)
}

func resourceTmplFlagFlagMainGoTmpl() (*asset, error) {
	bytes, err := resourceTmplFlagFlagMainGoTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "resource/tmpl/flag/flag/main.go.tmpl", size: 127, mode: os.FileMode(420), modTime: time.Unix(1434251196, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _resourceTmplFlagFlagVersionGoTmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x2a\x48\x4c\xce\x4e\x4c\x4f\x55\xc8\x4d\xcc\xcc\xe3\xe2\x4a\xce\xcf\x2b\x2e\x51\xf0\x4b\xcc\x4d\x55\x28\x2e\x29\xca\xcc\x4b\x57\xb0\x55\x50\xaa\xae\x56\xd0\x03\x0b\xd5\xd6\x2a\x41\x55\x84\xa5\x16\x15\x67\xe6\xe7\xa1\x29\x82\x89\x82\xd4\x01\x02\x00\x00\xff\xff\x61\x03\x18\x7c\x58\x00\x00\x00")

func resourceTmplFlagFlagVersionGoTmplBytes() ([]byte, error) {
	return bindataRead(
		_resourceTmplFlagFlagVersionGoTmpl,
		"resource/tmpl/flag/flag/version.go.tmpl",
	)
}

func resourceTmplFlagFlagVersionGoTmpl() (*asset, error) {
	bytes, err := resourceTmplFlagFlagVersionGoTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "resource/tmpl/flag/flag/version.go.tmpl", size: 88, mode: os.FileMode(420), modTime: time.Unix(1434251196, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if (err != nil) {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"resource/tmpl/command/codegangsta_cli/command/command.go.tmpl": resourceTmplCommandCodegangsta_cliCommandCommandGoTmpl,
	"resource/tmpl/command/codegangsta_cli/command/command_test.go.tmpl": resourceTmplCommandCodegangsta_cliCommandCommand_testGoTmpl,
	"resource/tmpl/command/codegangsta_cli/commands.go.tmpl": resourceTmplCommandCodegangsta_cliCommandsGoTmpl,
	"resource/tmpl/command/codegangsta_cli/main.go.tmpl": resourceTmplCommandCodegangsta_cliMainGoTmpl,
	"resource/tmpl/command/codegangsta_cli/version.go.tmpl": resourceTmplCommandCodegangsta_cliVersionGoTmpl,
	"resource/tmpl/command/go_cmd/command.go.tmpl": resourceTmplCommandGo_cmdCommandGoTmpl,
	"resource/tmpl/command/go_cmd/command_test.go.tmpl": resourceTmplCommandGo_cmdCommand_testGoTmpl,
	"resource/tmpl/command/go_cmd/main.go.tmpl": resourceTmplCommandGo_cmdMainGoTmpl,
	"resource/tmpl/command/mitchellh_cli/cli.go.tmpl": resourceTmplCommandMitchellh_cliCliGoTmpl,
	"resource/tmpl/command/mitchellh_cli/command/command.go.tmpl": resourceTmplCommandMitchellh_cliCommandCommandGoTmpl,
	"resource/tmpl/command/mitchellh_cli/command/command_test.go.tmpl": resourceTmplCommandMitchellh_cliCommandCommand_testGoTmpl,
	"resource/tmpl/command/mitchellh_cli/command/meta.go.tmpl": resourceTmplCommandMitchellh_cliCommandMetaGoTmpl,
	"resource/tmpl/command/mitchellh_cli/commands.go.tmpl": resourceTmplCommandMitchellh_cliCommandsGoTmpl,
	"resource/tmpl/command/mitchellh_cli/main.go.tmpl": resourceTmplCommandMitchellh_cliMainGoTmpl,
	"resource/tmpl/command/mitchellh_cli/version.go.tmpl": resourceTmplCommandMitchellh_cliVersionGoTmpl,
	"resource/tmpl/common/CHANGELOG.md.tmpl": resourceTmplCommonChangelogMdTmpl,
	"resource/tmpl/common/README.md.tmpl": resourceTmplCommonReadmeMdTmpl,
	"resource/tmpl/flag/flag/cli.go.tmpl": resourceTmplFlagFlagCliGoTmpl,
	"resource/tmpl/flag/flag/cli_test.go.tmpl": resourceTmplFlagFlagCli_testGoTmpl,
	"resource/tmpl/flag/flag/main.go.tmpl": resourceTmplFlagFlagMainGoTmpl,
	"resource/tmpl/flag/flag/version.go.tmpl": resourceTmplFlagFlagVersionGoTmpl,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func func() (*asset, error)
	Children map[string]*bintree
}
var _bintree = &bintree{nil, map[string]*bintree{
	"resource": &bintree{nil, map[string]*bintree{
		"tmpl": &bintree{nil, map[string]*bintree{
			"command": &bintree{nil, map[string]*bintree{
				"codegangsta_cli": &bintree{nil, map[string]*bintree{
					"command": &bintree{nil, map[string]*bintree{
						"command.go.tmpl": &bintree{resourceTmplCommandCodegangsta_cliCommandCommandGoTmpl, map[string]*bintree{
						}},
						"command_test.go.tmpl": &bintree{resourceTmplCommandCodegangsta_cliCommandCommand_testGoTmpl, map[string]*bintree{
						}},
					}},
					"commands.go.tmpl": &bintree{resourceTmplCommandCodegangsta_cliCommandsGoTmpl, map[string]*bintree{
					}},
					"main.go.tmpl": &bintree{resourceTmplCommandCodegangsta_cliMainGoTmpl, map[string]*bintree{
					}},
					"version.go.tmpl": &bintree{resourceTmplCommandCodegangsta_cliVersionGoTmpl, map[string]*bintree{
					}},
				}},
				"go_cmd": &bintree{nil, map[string]*bintree{
					"command.go.tmpl": &bintree{resourceTmplCommandGo_cmdCommandGoTmpl, map[string]*bintree{
					}},
					"command_test.go.tmpl": &bintree{resourceTmplCommandGo_cmdCommand_testGoTmpl, map[string]*bintree{
					}},
					"main.go.tmpl": &bintree{resourceTmplCommandGo_cmdMainGoTmpl, map[string]*bintree{
					}},
				}},
				"mitchellh_cli": &bintree{nil, map[string]*bintree{
					"cli.go.tmpl": &bintree{resourceTmplCommandMitchellh_cliCliGoTmpl, map[string]*bintree{
					}},
					"command": &bintree{nil, map[string]*bintree{
						"command.go.tmpl": &bintree{resourceTmplCommandMitchellh_cliCommandCommandGoTmpl, map[string]*bintree{
						}},
						"command_test.go.tmpl": &bintree{resourceTmplCommandMitchellh_cliCommandCommand_testGoTmpl, map[string]*bintree{
						}},
						"meta.go.tmpl": &bintree{resourceTmplCommandMitchellh_cliCommandMetaGoTmpl, map[string]*bintree{
						}},
					}},
					"commands.go.tmpl": &bintree{resourceTmplCommandMitchellh_cliCommandsGoTmpl, map[string]*bintree{
					}},
					"main.go.tmpl": &bintree{resourceTmplCommandMitchellh_cliMainGoTmpl, map[string]*bintree{
					}},
					"version.go.tmpl": &bintree{resourceTmplCommandMitchellh_cliVersionGoTmpl, map[string]*bintree{
					}},
				}},
			}},
			"common": &bintree{nil, map[string]*bintree{
				"CHANGELOG.md.tmpl": &bintree{resourceTmplCommonChangelogMdTmpl, map[string]*bintree{
				}},
				"README.md.tmpl": &bintree{resourceTmplCommonReadmeMdTmpl, map[string]*bintree{
				}},
			}},
			"flag": &bintree{nil, map[string]*bintree{
				"flag": &bintree{nil, map[string]*bintree{
					"cli.go.tmpl": &bintree{resourceTmplFlagFlagCliGoTmpl, map[string]*bintree{
					}},
					"cli_test.go.tmpl": &bintree{resourceTmplFlagFlagCli_testGoTmpl, map[string]*bintree{
					}},
					"main.go.tmpl": &bintree{resourceTmplFlagFlagMainGoTmpl, map[string]*bintree{
					}},
					"version.go.tmpl": &bintree{resourceTmplFlagFlagVersionGoTmpl, map[string]*bintree{
					}},
				}},
			}},
		}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
        data, err := Asset(name)
        if err != nil {
                return err
        }
        info, err := AssetInfo(name)
        if err != nil {
                return err
        }
        err = os.MkdirAll(_filePath(dir, path.Dir(name)), os.FileMode(0755))
        if err != nil {
                return err
        }
        err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
        if err != nil {
                return err
        }
        err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
        if err != nil {
                return err
        }
        return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
        children, err := AssetDir(name)
        // File
        if err != nil {
                return RestoreAsset(dir, name)
        }
        // Dir
        for _, child := range children {
                err = RestoreAssets(dir, path.Join(name, child))
                if err != nil {
                        return err
                }
        }
        return nil
}

func _filePath(dir, name string) string {
        cannonicalName := strings.Replace(name, "\\", "/", -1)
        return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}

